---
import { undefined } from "astro:schema";
import type { GlobalData } from "../../scripts/config";
import { tryGetGlobalDataAsync } from "../../scripts/db";

export const prerender = false;

const { inviteCode } = Astro.params;

if (!inviteCode) return Astro.redirect(`/e/${eventSlug}`);

const eventSlug = await tryGetEventSlugAsync(inviteCode);
if (eventSlug == null)
    return new Response(null, {
        status: 404,
        statusText: `Cannot find invite code ${inviteCode}`,
    });

return Astro.redirect(`/e/${eventSlug}`);

async function tryGetEventSlugAsync(
    inviteCode: string,
): Promise<string | null> {
    const globalData = await tryGetGlobalDataAsync();
    if (globalData == null) return null;

    const eventSlugs = globalData.invites
        .filter((invite) => invite.inviteCode == inviteCode)
        .map((invite) => invite.eventSlug);

    if (eventSlugs.length == 0 || eventSlugs.length > 1) return null;

    return eventSlugs[0];
}
---
